apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "me.ycdev.android.devtools"
        minSdkVersion 9
        targetSdkVersion 22
        versionCode 6
        versionName "1.3.1"

        buildConfigField "boolean", "DEBUG_LOG", rootProject.ext.DEBUG_LOG
        buildConfigField "boolean", "DISABLE_LOG", rootProject.ext.DISABLE_LOG
    }

    signingConfigs {
        androidTestKey {
            storeFile file("apk.keystore")
            storePassword "android"
            keyAlias "android.testkey"
            keyPassword "android"
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.androidTestKey
        }

        release {
            signingConfig signingConfigs.androidTestKey

            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File(output.outputFile.parent,
                    "DevTools-${variant.name}-${defaultConfig.versionName}" +
                            "-${defaultConfig.versionCode}.apk")
        }
    }

    lintOptions {
        textReport true
        textOutput 'stdout'

        // disable category "Accessibility"
        disable 'ClickableViewAccessibility','ContentDescription','LabelFor'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':archLib')
    compile project(':androidLib')
    compile project(':androidUiLib')
    compile project(':libsuperuser')
    compile 'com.android.support:appcompat-v7:22.2.0'
    compile 'com.android.support:support-annotations:22.0.0'
}

// workaround for the bug: http://code.google.com/p/android/issues/detail?id=174808
project.afterEvaluate {
    tasks.matching {
        it.name.startsWith('lint')
    }.each { task ->
        println "lint task found: " + task.name + ", full: " + task
        task.doFirst {
            println "!!!!!!!!! try to copy lint jars"
            fileTree(project.buildDir) {
                include '**/jars/lint.jar'
            }.each { File file ->
                println "copy lint jar: " + file.absolutePath
                file.renameTo(new File(file.parentFile.parentFile, file.getName()))
            }
        }
    }
}
